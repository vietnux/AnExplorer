apply plugin: 'com.android.application'

def props = new Properties()
File keystoreProperties = rootProject.file("keystore.properties")
if (keystoreProperties.exists()) {
    props.load(new FileInputStream(keystoreProperties))
} else {
    props['keystorefile'] = 'none';
}

android {
    compileSdkVersion 33

//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            outputFileName = "${parent.name}_${variant.name}_${variant.versionName}.apk"
//        }
//    }

    defaultConfig {
        applicationId "com.tglt.files.explorer"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1 //rootProject.generateVersionCode(1)
        versionName "1.0" //rootProject.generateVersionName()
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "LICENSE_KEY",  "$props.LICENSE_KEY"
        buildConfigField "String", "DROPBOX_CLIENT_ID",  "$props.DROPBOX_CLIENT_ID"
        buildConfigField "String", "DROPBOX_CLIENT_KEY",  "$props.DROPBOX_CLIENT_KEY"
        buildConfigField "String", "ONEDRIVE_CLIENT_ID",  "$props.ONEDRIVE_CLIENT_ID"
        buildConfigField "String", "ONEDRIVE_CLIENT_KEY",  "$props.ONEDRIVE_CLIENT_KEY"
        buildConfigField "String", "BOX_CLIENT_ID",  "$props.BOX_CLIENT_ID"
        buildConfigField "String", "BOX_CLIENT_KEY",  "$props.BOX_CLIENT_KEY"
        buildConfigField "String", "PLAYSTORE_LICENSE_KEY",  "$props.PLAYSTORE_LICENSE_KEY"
        buildConfigField "String", "MERCHANT_ID",  "$props.MERCHANT_ID"
        buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_PRO_CLIENT_ID"
        multiDexEnabled true
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
//            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//    flavorDimensions "release", "default"
//    productFlavors {
//        free {
//            applicationId "com.tglt.files.explorer"
//            dimension "default"
//            buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_CLIENT_ID"
//        }
//        pro {
//            applicationId "com.tglt.files.explorer"
//            dimension "default"
//            buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_PRO_CLIENT_ID"
//        }
//        underground {
//            applicationId "com.tglt.files.explorer.underground"
//            dimension "default"
//            buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_PRO_CLIENT_ID"
//        }
//        wear {
//            dimension "default"
//            minSdkVersion 26
//            versionCode rootProject.generateVersionCode(2)
//            buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_PRO_CLIENT_ID"
//        }
//        google {
//            dimension "release"
//        }
//        amazon {
//            dimension "release"
//            targetSdkVersion 26
//        }
//        other {
//            dimension "release"
//        }
//        paid {
//            applicationId "com.tglt.files.explorer.pro"
//            dimension "release"
//        }
//    }
//    variantFilter { variant ->
//        def names = variant.flavors*.name
//
//        if ((names.contains("underground") && (names.contains("google") || names.contains("other")))
//            || names.contains("paid") && !names.contains("wear")) {
//            variant.ignore = true
//        }
//    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        abortOnError true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.jaredrummler:android-processes:1.1.1'
    implementation 'com.github.mjdev:libaums:0.5.5'
    implementation 'org.apache.ftpserver:ftpserver-core:1.1.1'
    implementation 'commons-net:commons-net:3.8.0'
    implementation 'com.zsoltsafrany:needle:1.0.0'
    implementation 'com.cloudrail:cloudrail-si-android:2.22.4'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'com.github.javiersantos:AppUpdater:2.6.5'
//    implementation 'com.crashlytics.sdk.android:crashlytics:17.2.2'
//    freeImplementation 'com.crashlytics.sdk.android:crashlytics:17.2.2'
//    freeImplementation 'com.google.firebase:firebase-core:19.0.0'
//    freeImplementation 'com.google.firebase:firebase-ads:20.2.0'
//    freeImplementation 'com.anjlab.android.iab.v3:library:1.1.0'

//    wearImplementation 'com.google.android.support:wearable:2.8.1'
//    wearImplementation 'com.google.android.gms:play-services-wearable:17.1.0'
//    wearImplementation 'androidx.preference:preference:1.1.1'
//    wearImplementation 'androidx.wear:wear:1.1.0'
//    wearImplementation 'androidx.preference:preference:1.1.1'
//    wearCompileOnly 'com.google.android.wearable:wearable:2.8.1'

    implementation 'com.google.android.gms:play-services-ads:22.1.0'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.google.android.gms:play-services-auth:20.6.0'
    implementation 'com.google.android.gms:play-services-drive:17.0.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    implementation 'com.google.api-client:google-api-client:1.30.9'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'


    implementation project(':nativetemplates')
//    implementation project(':storage')

    //cloud storage
//    api 'pro.acuna:storager:2.3'
//    api 'pro.acuna:andromeda:+'
    //api project (':andromeda')
    //implementation 'com.amazonaws:aws-android-sdk-s3:2.4.4'
    implementation 'com.jcraft:jsch:0.1.55'
    implementation 'com.jcraft:jzlib:1.1.3'
}

android.signingConfigs.release.storeFile rootProject.file(props.storeFile)
android.signingConfigs.release.storePassword props.storePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyPassword

//if (getGradle().getStartParameter().getTaskRequests().toString().contains("Free")) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'io.fabric'

//}
